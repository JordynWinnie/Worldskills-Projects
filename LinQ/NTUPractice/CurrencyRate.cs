//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NTUPractice
{
    using System;
    using System.Collections.Generic;
    
    public partial class CurrencyRate
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public CurrencyRate()
        {
            this.SalesOrderHeaders = new HashSet<SalesOrderHeader>();
        }
    
        public int CurrencyRateID { get; set; }
        public System.DateTime CurrencyRateDate { get; set; }
        public string FromCurrencyCode { get; set; }
        public string ToCurrencyCode { get; set; }
        public decimal AverageRate { get; set; }
        public decimal EndOfDayRate { get; set; }
        public System.DateTime ModifiedDate { get; set; }
    
        public virtual Currency Currency { get; set; }
        public virtual Currency Currency1 { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SalesOrderHeader> SalesOrderHeaders { get; set; }

        public CurrencyRate(int currencyRateID, DateTime currencyRateDate, string fromCurrencyCode, string toCurrencyCode, decimal averageRate, decimal endOfDayRate, DateTime modifiedDate, Currency currency, Currency currency1, ICollection<SalesOrderHeader> salesOrderHeaders)
        {
            CurrencyRateID = currencyRateID;
            CurrencyRateDate = currencyRateDate;
            FromCurrencyCode = fromCurrencyCode ?? throw new ArgumentNullException(nameof(fromCurrencyCode));
            ToCurrencyCode = toCurrencyCode ?? throw new ArgumentNullException(nameof(toCurrencyCode));
            AverageRate = averageRate;
            EndOfDayRate = endOfDayRate;
            ModifiedDate = modifiedDate;
            Currency = currency ?? throw new ArgumentNullException(nameof(currency));
            Currency1 = currency1 ?? throw new ArgumentNullException(nameof(currency1));
            SalesOrderHeaders = salesOrderHeaders ?? throw new ArgumentNullException(nameof(salesOrderHeaders));
        }
    }
}
